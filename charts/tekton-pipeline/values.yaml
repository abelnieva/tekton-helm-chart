global:
  DefaultRegistry: ""
auth:
  git:
    username: "admin"
    password: ""
    url: https://github.com
  docker:
    # if specified use the docker config.json style secret like this:
    # https://github.com/tektoncd/pipeline/blob/master/docs/auth.md#configuring-docker-authentication-for-docker
    configJson: ""
serviceaccount:
  enabled: true
  annotations: {}

controller:
  deployment:
    labels: {}
    images: 
      controller:
        image: "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/controller"
        tag: "v0.32.4@sha256:e383f3e6f65e45fd55d954ef1a6aab4ace5f930eac3949c298e28e0275d3b3e0"
      kubeconfig-writer-image:
        image: "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/kubeconfigwriter:v0.32.4@sha256:f0502a38ac30516eaa524fc29f672b269957ecbdce9eda5eb7cea71cd80ec38f"
      git-image:
        image: "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.32.4@sha256:76f52c9b19f2edf65765f2ecf9c9225e02678207c9519234f419bc47651c34ff"
      entrypoint-image:
        image: "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/entrypoint:v0.32.4@sha256:9a9940b41d140b023e7ea7a445bb071939b7dcd19ccd4444d901e1cade537d92"
      nop-image:
        image: "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/nop:v0.32.4@sha256:4e6f2a8b8872d01c0abbe62ec0026181361f93e94e6a3613fab9ddbfd7edb1ed"
      imagedigest-exporter-image:
        image: "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/imagedigestexporter:v0.32.4@sha256:81188b0d22574161cb040742105ba9a35b3f8dcf72d32bf50cf2b139ef234f55"
      pr-image:
        image: "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/pullrequest-init:v0.32.4@sha256:6978e7f8b1ee43b79b7180e41a43f2c9b8c92503424f008c0592a69fa3c38ce7"
      gsutil-image:
        image: "gcr.io/google.com/cloudsdktool/cloud-sdk@sha256:27b2c22bf259d9bc1a291e99c63791ba0c27a04d2db0a43241ba0f1f20f4067f"
      shell-image:
        image: "gcr.io/distroless/base@sha256:cfdc553400d41b47fd231b028403469811fcdbc0e69d66ea8030c5a0b5fbac2b"
      shell-image-win:
        image: "mcr.microsoft.com/powershell:nanoserver@sha256:b6d5ff841b78bdf2dfed7550000fd4f3437385b8fa686ec0f010be24777654d6"

  pod:
    labels: {}
    annotations: {}
  # specifies the name of an optional kubernetes secret to mount environment variables from for things like HTTP proxy
  envFromSecret: "tekton-env"
webhook:
  deployment:
    images: "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/webhook"
    tag: "v0.32.4@sha256:b6cb1ddbd4caa76c9c8b3773d9ad428582537894a15fb458e8ed9acde9a0fc1c"
    labels: {}
  pod:
    labels: {}
  # specifies the name of an optional kubernetes secret to mount environment variables from for things like HTTP proxy
  envFromSecret: "tekton-env"
# configuration to put in the config-defaults ConfigMap
configDefaults:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # default-timeout-minutes contains the default number of
    # minutes to use for TaskRun and PipelineRun, if none is specified.
    default-timeout-minutes: "60"  # 60 minutes

    # default-service-account contains the default service account name
    # to use for TaskRun and PipelineRun, if none is specified.
    default-service-account: "default"

    # default-managed-by-label-value contains the default value given to the
    # "app.kubernetes.io/managed-by" label applied to all Pods created for
    # TaskRuns. If a user's requested TaskRun specifies another value for this
    # label, the user's request supercedes.
    default-managed-by-label-value: "tekton-pipelines"

    # default-pod-template contains the default pod template to use
    # TaskRun and PipelineRun, if none is specified. If a pod template
    # is specified, the default pod template is ignored.
    # default-pod-template:

    # default-cloud-events-sink contains the default CloudEvents sink to be
    # used for TaskRun and PipelineRun, when no sink is specified.
    # Note that right now it is still not possible to set a PipelineRun or
    # TaskRun specific sink, so the default is the only option available.
    # If no sink is specified, no CloudEvent is generated
    # default-cloud-events-sink:

    # default-task-run-workspace-binding contains the default workspace
    # configuration provided for any Workspaces that a Task declares
    # but that a TaskRun does not explicitly provide.
    # default-task-run-workspace-binding: |
    #   emptyDir: {}
# feature flags to put in feature-flags ConfigMap
featureFlags:
  # Setting this flag to "true" will prevent Tekton to create an
  # Affinity Assistant for every TaskRun sharing a PVC workspace
  #
  # The default behaviour is for Tekton to create Affinity Assistants
  #
  # See more in the workspace documentation about Affinity Assistant
  # https://github.com/tektoncd/pipeline/blob/main/docs/workspaces.md#affinity-assistant-and-specifying-workspace-order-in-a-pipeline
  # or https://github.com/tektoncd/pipeline/pull/2630 for more info.
  disable-affinity-assistant: "false"
  # Setting this flag to "false" will allow Tekton to override your
  # Task container's $HOME environment variable.
  #
  # See https://github.com/tektoncd/pipeline/issues/2013 for more
  # info.
  disable-home-env-overwrite: "true"
  # Setting this flag to "false" will allow Tekton to override your
  # Task container's working directory.
  #
  # See https://github.com/tektoncd/pipeline/issues/1836 for more
  # info.
  disable-working-directory-overwrite: "true"
  # Setting this flag to "true" will prevent Tekton scanning attached
  # service accounts and injecting any credentials it finds into your
  # Steps.
  #
  # The default behaviour currently is for Tekton to search service
  # accounts for secrets matching a specified format and automatically
  # mount those into your Steps.
  #
  # Note: setting this to "true" will prevent PipelineResources from
  # working.
  #
  # See https://github.com/tektoncd/pipeline/issues/2791 for more
  # info.
  disable-creds-init: "false"
  # This option should be set to false when Pipelines is running in a
  # cluster that does not use injected sidecars such as Istio. Setting
  # it to false should decrease the time it takes for a TaskRun to start
  # running. For clusters that use injected sidecars, setting this
  # option to false can lead to unexpected behavior.
  #
  # See https://github.com/tektoncd/pipeline/issues/2080 for more info.
  running-in-environment-with-injected-sidecars: "true"
  # Setting this flag to "true" will require that any Git SSH Secret
  # offered to Tekton must have known_hosts included.
  #
  # See https://github.com/tektoncd/pipeline/issues/2981 for more
  # info.
  require-git-ssh-secret-known-hosts: "false"
  # Setting this flag to "true" enables the use of Tekton OCI bundle.
  # This is an experimental feature and thus should still be considered
  # an alpha feature.
  enable-tekton-oci-bundles: "false"
  # Setting this flag to "true" enables the use of custom tasks from
  # within pipelines.
  # This is an experimental feature and thus should still be considered
  # an alpha feature.
  enable-custom-tasks: "false"
  # Setting this flag will determine which gated features are enabled.
  # Acceptable values are "stable" or "alpha".
  enable-api-fields: "stable"
  # Setting this flag to "true" scopes when expressions to guard a Task only
  # instead of a Task and its dependent Tasks.
  scope-when-expressions-to-task: "false"
